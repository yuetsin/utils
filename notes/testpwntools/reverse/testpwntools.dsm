;;
;; This file was generated by the Retargetable Decompiler
;; Website: https://retdec.com
;; Copyright (c) 2020 Retargetable Decompiler <info@retdec.com>
;;
;; Decompilation date: 2020-10-06 09:52:17
;; Architecture: x86-64
;;

;;
;; Code Segment
;;

; section: .init
; function: _init at 0x788 -- 0x79f
0x788:      48 83 ec 08                  	sub rsp, 8
0x78c:      48 8b 05 55 08 20 00         	mov rax, qword ptr [rip + 0x200855]
0x793:      48 85 c0                     	test rax, rax
0x796:      74 02                        	je 0x79a <_init+0x12>
0x798:      ff d0                        	call rax <__gmon_start__>
0x79a:      48 83 c4 08                  	add rsp, 8
0x79e:      c3                           	ret 
; section: .plt
; data inside code section at 0x7a0 -- 0x7b0
0x7a0:      ff 35 da 07 20 00 ff 25  dc 07 20 00 0f 1f 40 00   |.5.. ..%.. ...@.|
; function: function_7b0 at 0x7b0 -- 0x7b6
0x7b0:      ff 25 da 07 20 00            	jmp qword ptr [rip + 0x2007da] <puts>
; data inside code section at 0x7b6 -- 0x7c0
0x7b6:      68 00 00 00 00 e9 e0 ff  ff ff                     |h.........      |
; function: function_7c0 at 0x7c0 -- 0x7c6
0x7c0:      ff 25 d2 07 20 00            	jmp qword ptr [rip + 0x2007d2] <__stack_chk_fail>
; data inside code section at 0x7c6 -- 0x7d0
0x7c6:      68 01 00 00 00 e9 d0 ff  ff ff                     |h.........      |
; function: function_7d0 at 0x7d0 -- 0x7d6
0x7d0:      ff 25 ca 07 20 00            	jmp qword ptr [rip + 0x2007ca] <setbuf>
; data inside code section at 0x7d6 -- 0x7e0
0x7d6:      68 02 00 00 00 e9 c0 ff  ff ff                     |h.........      |
; function: function_7e0 at 0x7e0 -- 0x7e6
0x7e0:      ff 25 c2 07 20 00            	jmp qword ptr [rip + 0x2007c2] <system>
; data inside code section at 0x7e6 -- 0x7f0
0x7e6:      68 03 00 00 00 e9 b0 ff  ff ff                     |h.........      |
; function: function_7f0 at 0x7f0 -- 0x7f6
0x7f0:      ff 25 ba 07 20 00            	jmp qword ptr [rip + 0x2007ba] <printf>
; data inside code section at 0x7f6 -- 0x800
0x7f6:      68 04 00 00 00 e9 a0 ff  ff ff                     |h.........      |
; function: function_800 at 0x800 -- 0x806
0x800:      ff 25 b2 07 20 00            	jmp qword ptr [rip + 0x2007b2] <read>
; data inside code section at 0x806 -- 0x810
0x806:      68 05 00 00 00 e9 90 ff  ff ff                     |h.........      |
; function: function_810 at 0x810 -- 0x816
0x810:      ff 25 aa 07 20 00            	jmp qword ptr [rip + 0x2007aa] <srand>
; data inside code section at 0x816 -- 0x820
0x816:      68 06 00 00 00 e9 80 ff  ff ff                     |h.........      |
; function: function_820 at 0x820 -- 0x826
0x820:      ff 25 a2 07 20 00            	jmp qword ptr [rip + 0x2007a2] <time>
; data inside code section at 0x826 -- 0x830
0x826:      68 07 00 00 00 e9 70 ff  ff ff                     |h.....p...      |
; function: function_830 at 0x830 -- 0x836
0x830:      ff 25 9a 07 20 00            	jmp qword ptr [rip + 0x20079a] <rand>
; data inside code section at 0x836 -- 0x840
0x836:      68 08 00 00 00 e9 60 ff  ff ff                     |h.....`...      |
; section: .plt.got
; function: function_840 at 0x840 -- 0x846
0x840:      ff 25 b2 07 20 00            	jmp qword ptr [rip + 0x2007b2] <__cxa_finalize>
; data inside code section at 0x846 -- 0x848
0x846:      66 90                                              |f.              |
; section: .text
; function: _start at 0x850 -- 0x87b
0x850:      31 ed                        	xor ebp, ebp
0x852:      49 89 d1                     	mov r9, rdx
0x855:      5e                           	pop rsi
0x856:      48 89 e2                     	mov rdx, rsp
0x859:      48 83 e4 f0                  	and rsp, 0xfffffffffffffff0
0x85d:      50                           	push rax
0x85e:      54                           	push rsp
0x85f:      4c 8d 05 6a 02 00 00         	lea r8, [rip + 0x26a]
0x866:      48 8d 0d f3 01 00 00         	lea rcx, [rip + 0x1f3]
0x86d:      48 8d 3d e6 00 00 00         	lea rdi, [rip + 0xe6]
0x874:      ff 15 66 07 20 00            	call qword ptr [rip + 0x200766] <__libc_start_main>
0x87a:      f4                           	hlt 
; data inside code section at 0x87b -- 0x880
0x87b:      0f 1f 44 00 00                                     |..D..           |
; function: deregister_tm_clones at 0x880 -- 0x8b2
0x880:      48 8d 3d 89 07 20 00         	lea rdi, [rip + 0x200789]
0x887:      55                           	push rbp
0x888:      48 8d 05 81 07 20 00         	lea rax, [rip + 0x200781]
0x88f:      48 39 f8                     	cmp rax, rdi
0x892:      48 89 e5                     	mov rbp, rsp
0x895:      74 19                        	je 0x8b0 <deregister_tm_clones+0x30>
0x897:      48 8b 05 3a 07 20 00         	mov rax, qword ptr [rip + 0x20073a]
0x89e:      48 85 c0                     	test rax, rax
0x8a1:      74 0d                        	je 0x8b0 <deregister_tm_clones+0x30>
0x8a3:      5d                           	pop rbp
0x8a4:      ff e0                        	jmp rax <_ITM_deregisterTMCloneTable>
; data inside code section at 0x8a6 -- 0x8b0
0x8a6:      66 2e 0f 1f 84 00 00 00  00 00                     |f.........      |
0x8b0:      5d                           	pop rbp
0x8b1:      c3                           	ret 
; data inside code section at 0x8b2 -- 0x8c0
0x8b2:      0f 1f 40 00 66 2e 0f 1f  84 00 00 00 00 00         |..@.f.........  |
; function: register_tm_clones at 0x8c0 -- 0x902
0x8c0:      48 8d 3d 49 07 20 00         	lea rdi, [rip + 0x200749]
0x8c7:      48 8d 35 42 07 20 00         	lea rsi, [rip + 0x200742]
0x8ce:      55                           	push rbp
0x8cf:      48 29 fe                     	sub rsi, rdi
0x8d2:      48 89 e5                     	mov rbp, rsp
0x8d5:      48 c1 fe 03                  	sar rsi, 3
0x8d9:      48 89 f0                     	mov rax, rsi
0x8dc:      48 c1 e8 3f                  	shr rax, 0x3f
0x8e0:      48 01 c6                     	add rsi, rax
0x8e3:      48 d1 fe                     	sar rsi, 1
0x8e6:      74 18                        	je 0x900 <register_tm_clones+0x40>
0x8e8:      48 8b 05 01 07 20 00         	mov rax, qword ptr [rip + 0x200701]
0x8ef:      48 85 c0                     	test rax, rax
0x8f2:      74 0c                        	je 0x900 <register_tm_clones+0x40>
0x8f4:      5d                           	pop rbp
0x8f5:      ff e0                        	jmp rax <_ITM_registerTMCloneTable>
; data inside code section at 0x8f7 -- 0x900
0x8f7:      66 0f 1f 84 00 00 00 00  00                        |f........       |
0x900:      5d                           	pop rbp
0x901:      c3                           	ret 
; data inside code section at 0x902 -- 0x910
0x902:      0f 1f 40 00 66 2e 0f 1f  84 00 00 00 00 00         |..@.f.........  |
; function: __do_global_dtors_aux at 0x910 -- 0x94a
0x910:      80 3d 31 07 20 00 00         	cmp byte ptr [rip + 0x200731], 0
0x917:      75 2f                        	jne 0x948 <__do_global_dtors_aux+0x38>
0x919:      48 83 3d d7 06 20 00 00      	cmp qword ptr [rip + 0x2006d7], 0
0x921:      55                           	push rbp
0x922:      48 89 e5                     	mov rbp, rsp
0x925:      74 0c                        	je 0x933 <__do_global_dtors_aux+0x23>
0x927:      48 8b 3d da 06 20 00         	mov rdi, qword ptr [rip + 0x2006da]
0x92e:      e8 0d ff ff ff               	call 0x840 <__cxa_finalize>
0x933:      e8 48 ff ff ff               	call 0x880 <deregister_tm_clones>
0x938:      c6 05 09 07 20 00 01         	mov byte ptr [rip + 0x200709], 1
0x93f:      5d                           	pop rbp
0x940:      c3                           	ret 
; data inside code section at 0x941 -- 0x948
0x941:      0f 1f 80 00 00 00 00                               |.......         |
0x948:      f3 c3                        	ret 
; data inside code section at 0x94a -- 0x950
0x94a:      66 0f 1f 44 00 00                                  |f..D..          |
; function: frame_dummy at 0x950 -- 0x95a
0x950:      55                           	push rbp
0x951:      48 89 e5                     	mov rbp, rsp
0x954:      5d                           	pop rbp
0x955:      e9 66 ff ff ff               	jmp 0x8c0 <register_tm_clones>
; function: main at 0x95a -- 0xa5c
0x95a:      55                           	push rbp
0x95b:      48 89 e5                     	mov rbp, rsp
0x95e:      48 83 ec 20                  	sub rsp, 0x20
0x962:      64 48 8b 04 25 28 00 00 00   	mov rax, qword ptr fs:[0x28]
0x96b:      48 89 45 f8                  	mov qword ptr [rbp - 8], rax
0x96f:      31 c0                        	xor eax, eax
0x971:      48 8b 05 b8 06 20 00         	mov rax, qword ptr [rip + 0x2006b8]
0x978:      be 00 00 00 00               	mov esi, 0
0x97d:      48 89 c7                     	mov rdi, rax
0x980:      e8 4b fe ff ff               	call 0x7d0 <setbuf>
0x985:      48 8b 05 94 06 20 00         	mov rax, qword ptr [rip + 0x200694]
0x98c:      be 00 00 00 00               	mov esi, 0
0x991:      48 89 c7                     	mov rdi, rax
0x994:      e8 37 fe ff ff               	call 0x7d0 <setbuf>
0x999:      48 8b 05 a0 06 20 00         	mov rax, qword ptr [rip + 0x2006a0]
0x9a0:      be 00 00 00 00               	mov esi, 0
0x9a5:      48 89 c7                     	mov rdi, rax
0x9a8:      e8 23 fe ff ff               	call 0x7d0 <setbuf>
0x9ad:      bf 00 00 00 00               	mov edi, 0
0x9b2:      e8 69 fe ff ff               	call 0x820 <time>
0x9b7:      05 34 12 00 00               	add eax, 0x1234
0x9bc:      89 c7                        	mov edi, eax
0x9be:      e8 4d fe ff ff               	call 0x810 <srand>
0x9c3:      e8 68 fe ff ff               	call 0x830 <rand>
0x9c8:      48 98                        	cdqe 
0x9ca:      48 c1 e0 20                  	shl rax, 0x20
0x9ce:      48 89 45 f0                  	mov qword ptr [rbp - 0x10], rax
0x9d2:      e8 59 fe ff ff               	call 0x830 <rand>
0x9d7:      48 98                        	cdqe 
0x9d9:      48 01 45 f0                  	add qword ptr [rbp - 0x10], rax
0x9dd:      48 8b 45 f0                  	mov rax, qword ptr [rbp - 0x10]
0x9e1:      48 89 c6                     	mov rsi, rax
0x9e4:      48 8d 3d fd 00 00 00         	lea rdi, [rip + 0xfd]
0x9eb:      b8 00 00 00 00               	mov eax, 0
0x9f0:      e8 fb fd ff ff               	call 0x7f0 <printf>
0x9f5:      48 c7 45 e8 00 00 00 00      	mov qword ptr [rbp - 0x18], 0
0x9fd:      48 8d 45 e8                  	lea rax, [rbp - 0x18]
0xa01:      ba 08 00 00 00               	mov edx, 8
0xa06:      48 89 c6                     	mov rsi, rax
0xa09:      bf 00 00 00 00               	mov edi, 0
0xa0e:      e8 ed fd ff ff               	call 0x800 <read>
0xa13:      48 8b 45 e8                  	mov rax, qword ptr [rbp - 0x18]
0xa17:      48 39 45 f0                  	cmp qword ptr [rbp - 0x10], rax
0xa1b:      75 18                        	jne 0xa35 <main+0xdb>
0xa1d:      48 8d 3d ee 00 00 00         	lea rdi, [rip + 0xee]
0xa24:      e8 87 fd ff ff               	call 0x7b0 <puts>
0xa29:      48 8d 3d ec 00 00 00         	lea rdi, [rip + 0xec]
0xa30:      e8 ab fd ff ff               	call 0x7e0 <system>
0xa35:      48 8d 3d e8 00 00 00         	lea rdi, [rip + 0xe8]
0xa3c:      e8 6f fd ff ff               	call 0x7b0 <puts>
0xa41:      b8 00 00 00 00               	mov eax, 0
0xa46:      48 8b 4d f8                  	mov rcx, qword ptr [rbp - 8]
0xa4a:      64 48 33 0c 25 28 00 00 00   	xor rcx, qword ptr fs:[0x28]
0xa53:      74 05                        	je 0xa5a <main+0x100>
0xa55:      e8 66 fd ff ff               	call 0x7c0 <__stack_chk_fail>
0xa5a:      c9                           	leave 
0xa5b:      c3                           	ret 
; data inside code section at 0xa5c -- 0xa60
0xa5c:      0f 1f 40 00                                        |..@.            |
; function: __libc_csu_init at 0xa60 -- 0xac5
0xa60:      41 57                        	push r15
0xa62:      41 56                        	push r14
0xa64:      49 89 d7                     	mov r15, rdx
0xa67:      41 55                        	push r13
0xa69:      41 54                        	push r12
0xa6b:      4c 8d 25 06 03 20 00         	lea r12, [rip + 0x200306]
0xa72:      55                           	push rbp
0xa73:      48 8d 2d 06 03 20 00         	lea rbp, [rip + 0x200306]
0xa7a:      53                           	push rbx
0xa7b:      41 89 fd                     	mov r13d, edi
0xa7e:      49 89 f6                     	mov r14, rsi
0xa81:      4c 29 e5                     	sub rbp, r12
0xa84:      48 83 ec 08                  	sub rsp, 8
0xa88:      48 c1 fd 03                  	sar rbp, 3
0xa8c:      e8 f7 fc ff ff               	call 0x788 <_init>
0xa91:      48 85 ed                     	test rbp, rbp
0xa94:      74 20                        	je 0xab6 <__libc_csu_init+0x56>
0xa96:      31 db                        	xor ebx, ebx
0xa98:      0f 1f 84 00 00 00 00 00      	nop dword ptr [rax + rax]
0xaa0:      4c 89 fa                     	mov rdx, r15
0xaa3:      4c 89 f6                     	mov rsi, r14
0xaa6:      44 89 ef                     	mov edi, r13d
0xaa9:      41 ff 14 dc                  	call qword ptr [r12 + rbx*8]
0xaad:      48 83 c3 01                  	add rbx, 1
0xab1:      48 39 dd                     	cmp rbp, rbx
0xab4:      75 ea                        	jne 0xaa0 <__libc_csu_init+0x40>
0xab6:      48 83 c4 08                  	add rsp, 8
0xaba:      5b                           	pop rbx
0xabb:      5d                           	pop rbp
0xabc:      41 5c                        	pop r12
0xabe:      41 5d                        	pop r13
0xac0:      41 5e                        	pop r14
0xac2:      41 5f                        	pop r15
0xac4:      c3                           	ret 
; data inside code section at 0xac5 -- 0xad0
0xac5:      90 66 2e 0f 1f 84 00 00  00 00 00                  |.f.........     |
; function: __libc_csu_fini at 0xad0 -- 0xad2
0xad0:      f3 c3                        	ret 
; section: .fini
; function: _fini at 0xad4 -- 0xadd
0xad4:      48 83 ec 08                  	sub rsp, 8
0xad8:      48 83 c4 08                  	add rsp, 8
0xadc:      c3                           	ret 

;;
;; Data Segment
;;

; section: .interp
0x238:      2f 6c 69 62 36 34 2f 6c  64 2d 6c 69 6e 75 78 2d   |/lib64/ld-linux-|
0x248:      78 38 36 2d 36 34 2e 73  6f 2e 32 00 04            |x86-64.so.2..   |
; section: .gnu.hash
0x298:      03 00 00 00 0f 00 00 00  01 00 00 00 06 00 00 00   |................|
0x2a8:      00 01 20 00 80 01 10 02  0f 00 00 00 10 00 00 00   |.. .............|
0x2b8:      00 00 00 00 29 1d 8c 1c  66 55 61 10 39 f2 8b 1c   |....)...fUa.9...|
0x2c8:      00                                                 |.               |
; section: .dynsym
0x2c8:      00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x2d8:      00 00 00 00 00 00 00 00  91 00 00 00 20 00 00 00   |............ ...|
0x2e8:      00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x2f8:      11 00 00 00 12 00 00 00  00 00 00 00 00 00 00 00   |................|
0x308:      00 00 00 00 00 00 00 00  1b 00 00 00 12 00 00 00   |................|
0x318:      00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x328:      62 00 00 00 12 00 00 00  00 00 00 00 00 00 00 00   |b...............|
0x338:      00 00 00 00 00 00 00 00  4c 00 00 00 12 00 00 00   |........L.......|
0x348:      00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x358:      32 00 00 00 12 00 00 00  00 00 00 00 00 00 00 00   |2...............|
0x368:      00 00 00 00 00 00 00 00  39 00 00 00 12 00 00 00   |........9.......|
0x378:      00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x388:      69 00 00 00 12 00 00 00  00 00 00 00 00 00 00 00   |i...............|
0x398:      00 00 00 00 00 00 00 00  0b 00 00 00 12 00 00 00   |................|
0x3a8:      00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x3b8:      ad 00 00 00 20 00 00 00  00 00 00 00 00 00 00 00   |.... ...........|
0x3c8:      00 00 00 00 00 00 00 00  16 00 00 00 12 00 00 00   |................|
0x3d8:      00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x3e8:      bc 00 00 00 20 00 00 00  00 00 00 00 00 00 00 00   |.... ...........|
0x3f8:      00 00 00 00 00 00 00 00  53 00 00 00 22 00 00 00   |........S..."...|
0x408:      00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x418:      0c 00 00 00 12 00 00 00  00 00 00 00 00 00 00 00   |................|
0x428:      00 00 00 00 00 00 00 00  3e 00 00 00 11 00 18 00   |........>.......|
0x438:      20 10 20 00 00 00 00 00  08 00 00 00 00 00 00 00   | . .............|
0x448:      2c 00 00 00 11 00 18 00  30 10 20 00 00 00 00 00   |,.......0. .....|
0x458:      08 00 00 00 00 00 00 00  45 00 00 00 11 00 18 00   |........E.......|
0x468:      40 10 20 00 00 00 00 00  08 00 00 00 00 00 00 00   |@. .............|
0x478:      00                                                 |.               |
; section: .dynstr
0x478:      00 6c 69 62 63 2e 73 6f  2e 36 00 73 72 61 6e 64   |.libc.so.6.srand|
0x488:      00 70 75 74 73 00 74 69  6d 65 00 5f 5f 73 74 61   |.puts.time.__sta|
0x498:      63 6b 5f 63 68 6b 5f 66  61 69 6c 00 73 74 64 69   |ck_chk_fail.stdi|
0x4a8:      6e 00 70 72 69 6e 74 66  00 72 65 61 64 00 73 74   |n.printf.read.st|
0x4b8:      64 6f 75 74 00 73 74 64  65 72 72 00 73 79 73 74   |dout.stderr.syst|
0x4c8:      65 6d 00 5f 5f 63 78 61  5f 66 69 6e 61 6c 69 7a   |em.__cxa_finaliz|
0x4d8:      65 00 73 65 74 62 75 66  00 5f 5f 6c 69 62 63 5f   |e.setbuf.__libc_|
0x4e8:      73 74 61 72 74 5f 6d 61  69 6e 00 47 4c 49 42 43   |start_main.GLIBC|
0x4f8:      5f 32 2e 34 00 47 4c 49  42 43 5f 32 2e 32 2e 35   |_2.4.GLIBC_2.2.5|
0x508:      00 5f 49 54 4d 5f 64 65  72 65 67 69 73 74 65 72   |._ITM_deregister|
0x518:      54 4d 43 6c 6f 6e 65 54  61 62 6c 65 00 5f 5f 67   |TMCloneTable.__g|
0x528:      6d 6f 6e 5f 73 74 61 72  74 5f 5f 00 5f 49 54 4d   |mon_start__._ITM|
0x538:      5f 72 65 67 69 73 74 65  72 54 4d 43 6c 6f 6e 65   |_registerTMClone|
0x548:      54 61 62 6c 65 00 00                               |Table..         |
; section: .gnu.version
0x54e:      00 00 00 00 02 00 03 00  02 00 02 00 02 00 02 00   |................|
0x55e:      02 00 02 00 00 00 02 00  00 00 02 00 02 00 02 00   |................|
0x56e:      02 00 02 00 ??                                     |....?           |
; section: .gnu.version_r
0x578:      01 00 02 00 01 00 00 00  10 00 00 00 00 00 00 00   |................|
0x588:      14 69 69 0d 00 00 03 00  7b 00 00 00 10 00 00 00   |.ii.....{.......|
0x598:      75 1a 69 09 00 00 02 00  85 00 00 00 00 00 00 00   |u.i.............|
0x5a8:      78                                                 |x               |
; section: .rela.dyn
0x5a8:      78 0d 20 00 00 00 00 00  08 00 00 00 00 00 00 00   |x. .............|
0x5b8:      50 09 00 00 00 00 00 00  80 0d 20 00 00 00 00 00   |P......... .....|
0x5c8:      08 00 00 00 00 00 00 00  10 09 00 00 00 00 00 00   |................|
0x5d8:      08 10 20 00 00 00 00 00  08 00 00 00 00 00 00 00   |.. .............|
0x5e8:      08 10 20 00 00 00 00 00  d8 0f 20 00 00 00 00 00   |.. ....... .....|
0x5f8:      06 00 00 00 01 00 00 00  00 00 00 00 00 00 00 00   |................|
0x608:      e0 0f 20 00 00 00 00 00  06 00 00 00 08 00 00 00   |.. .............|
0x618:      00 00 00 00 00 00 00 00  e8 0f 20 00 00 00 00 00   |.......... .....|
0x628:      06 00 00 00 0a 00 00 00  00 00 00 00 00 00 00 00   |................|
0x638:      f0 0f 20 00 00 00 00 00  06 00 00 00 0c 00 00 00   |.. .............|
0x648:      00 00 00 00 00 00 00 00  f8 0f 20 00 00 00 00 00   |.......... .....|
0x658:      06 00 00 00 0d 00 00 00  00 00 00 00 00 00 00 00   |................|
0x668:      20 10 20 00 00 00 00 00  05 00 00 00 0f 00 00 00   | . .............|
0x678:      00 00 00 00 00 00 00 00  30 10 20 00 00 00 00 00   |........0. .....|
0x688:      05 00 00 00 10 00 00 00  00 00 00 00 00 00 00 00   |................|
0x698:      40 10 20 00 00 00 00 00  05 00 00 00 11 00 00 00   |@. .............|
0x6a8:      00 00 00 00 00 00 00 00  90                        |.........       |
; section: .rela.plt
0x6b0:      90 0f 20 00 00 00 00 00  07 00 00 00 02 00 00 00   |.. .............|
0x6c0:      00 00 00 00 00 00 00 00  98 0f 20 00 00 00 00 00   |.......... .....|
0x6d0:      07 00 00 00 03 00 00 00  00 00 00 00 00 00 00 00   |................|
0x6e0:      a0 0f 20 00 00 00 00 00  07 00 00 00 04 00 00 00   |.. .............|
0x6f0:      00 00 00 00 00 00 00 00  a8 0f 20 00 00 00 00 00   |.......... .....|
0x700:      07 00 00 00 05 00 00 00  00 00 00 00 00 00 00 00   |................|
0x710:      b0 0f 20 00 00 00 00 00  07 00 00 00 06 00 00 00   |.. .............|
0x720:      00 00 00 00 00 00 00 00  b8 0f 20 00 00 00 00 00   |.......... .....|
0x730:      07 00 00 00 07 00 00 00  00 00 00 00 00 00 00 00   |................|
0x740:      c0 0f 20 00 00 00 00 00  07 00 00 00 09 00 00 00   |.. .............|
0x750:      00 00 00 00 00 00 00 00  c8 0f 20 00 00 00 00 00   |.......... .....|
0x760:      07 00 00 00 0b 00 00 00  00 00 00 00 00 00 00 00   |................|
0x770:      d0 0f 20 00 00 00 00 00  07 00 00 00 0e 00 00 00   |.. .............|
0x780:      00 00 00 00 00 00 00 00  48                        |........H       |
; section: .rodata
0xae0:      01 00 02 00 00 00 00 00                            |........        |
0xae8:      44 6f 20 79 6f 75 20 6b  6e 6f 77 20 68 6f 77 20   |Do you know how |   "Do you know how 0x%llx stored in memory?\n"
0xaf8:      30 78 25 6c 6c 78 20 73  74 6f 72 65 64 20 69 6e   |0x%llx stored in|
0xb08:      20 6d 65 6d 6f 72 79 3f  0a 00                     | memory?..      |
0xb12:      47 6f 6f 64 20 6a 6f 62  21 00                     |Good job!.      |   "Good job!"
0xb1c:      2f 62 69 6e 2f 73 68 00                            |/bin/sh.        |   "/bin/sh"
0xb24:      59 6f 75 20 61 72 65 20  77 72 6f 6e 67 21 00      |You are wrong!. |   "You are wrong!"
0xb33:      ??                                                 |?               |
; section: .eh_frame_hdr
0xb34:      01 1b 03 3b 38 00 00 00  06 00 00 00 6c fc ff ff   |...;8.......l...|
0xb44:      84 00 00 00 0c fd ff ff  ac 00 00 00 1c fd ff ff   |................|
0xb54:      54 00 00 00 26 fe ff ff  c4 00 00 00 2c ff ff ff   |T...&.......,...|
0xb64:      e4 00 00 00 9c ff ff ff  2c 01 00 00 14            |........,....   |
; section: .eh_frame
0xb70:      14 00 00 00 00 00 00 00  01 7a 52 00 01 78 10 01   |.........zR..x..|
0xb80:      1b 0c 07 08 90 01 07 10  14 00 00 00 1c 00 00 00   |................|
0xb90:      c0 fc ff ff 2b 00 00 00  00 00 00 00 00 00 00 00   |....+...........|
0xba0:      14 00 00 00 00 00 00 00  01 7a 52 00 01 78 10 01   |.........zR..x..|
0xbb0:      1b 0c 07 08 90 01 00 00  24 00 00 00 1c 00 00 00   |........$.......|
0xbc0:      e0 fb ff ff a0 00 00 00  00 0e 10 46 0e 18 4a 0f   |...........F..J.|
0xbd0:      0b 77 08 80 00 3f 1a 3b  2a 33 24 22 00 00 00 00   |.w...?.;*3$"....|
0xbe0:      14 00 00 00 44 00 00 00  58 fc ff ff 08 00 00 00   |....D...X.......|
0xbf0:      00 00 00 00 00 00 00 00  1c 00 00 00 5c 00 00 00   |............\...|
0xc00:      5a fd ff ff 02 01 00 00  00 41 0e 10 86 02 43 0d   |Z........A....C.|
0xc10:      06 02 fd 0c 07 08 00 00  44 00 00 00 7c 00 00 00   |........D...|...|
0xc20:      40 fe ff ff 65 00 00 00  00 42 0e 10 8f 02 42 0e   |@...e....B....B.|
0xc30:      18 8e 03 45 0e 20 8d 04  42 0e 28 8c 05 48 0e 30   |...E. ..B.(..H.0|
0xc40:      86 06 48 0e 38 83 07 4d  0e 40 72 0e 38 41 0e 30   |..H.8..M.@r.8A.0|
0xc50:      41 0e 28 42 0e 20 42 0e  18 42 0e 10 42 0e 08 00   |A.(B. B..B..B...|
0xc60:      10 00 00 00 c4 00 00 00  68 fe ff ff 02 00 00 00   |........h.......|
0xc70:      00 00 00 00 00 00 00 00  ??                        |........?       |
; section: .init_array
0x200d78:   50 09 00 00 00 00 00 00  10                        |P........       |
; section: .fini_array
0x200d80:   10 09 00 00 00 00 00 00  01                        |.........       |
; section: .dynamic
0x200d88:   01 00 00 00 00 00 00 00  01 00 00 00 00 00 00 00   |................|
0x200d98:   0c 00 00 00 00 00 00 00  88 07 00 00 00 00 00 00   |................|
0x200da8:   0d 00 00 00 00 00 00 00  d4 0a 00 00 00 00 00 00   |................|
0x200db8:   19 00 00 00 00 00 00 00  78 0d 20 00 00 00 00 00   |........x. .....|
0x200dc8:   1b 00 00 00 00 00 00 00  08 00 00 00 00 00 00 00   |................|
0x200dd8:   1a 00 00 00 00 00 00 00  80 0d 20 00 00 00 00 00   |.......... .....|
0x200de8:   1c 00 00 00 00 00 00 00  08 00 00 00 00 00 00 00   |................|
0x200df8:   f5 fe ff 6f 00 00 00 00  98 02 00 00 00 00 00 00   |...o............|
0x200e08:   05 00 00 00 00 00 00 00  78 04 00 00 00 00 00 00   |........x.......|
0x200e18:   06 00 00 00 00 00 00 00  c8 02 00 00 00 00 00 00   |................|
0x200e28:   0a 00 00 00 00 00 00 00  d6 00 00 00 00 00 00 00   |................|
0x200e38:   0b 00 00 00 00 00 00 00  18 00 00 00 00 00 00 00   |................|
0x200e48:   15 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x200e58:   03 00 00 00 00 00 00 00  78 0f 20 00 00 00 00 00   |........x. .....|
0x200e68:   02 00 00 00 00 00 00 00  d8 00 00 00 00 00 00 00   |................|
0x200e78:   14 00 00 00 00 00 00 00  07 00 00 00 00 00 00 00   |................|
0x200e88:   17 00 00 00 00 00 00 00  b0 06 00 00 00 00 00 00   |................|
0x200e98:   07 00 00 00 00 00 00 00  a8 05 00 00 00 00 00 00   |................|
0x200ea8:   08 00 00 00 00 00 00 00  08 01 00 00 00 00 00 00   |................|
0x200eb8:   09 00 00 00 00 00 00 00  18 00 00 00 00 00 00 00   |................|
0x200ec8:   1e 00 00 00 00 00 00 00  08 00 00 00 00 00 00 00   |................|
0x200ed8:   fb ff ff 6f 00 00 00 00  01 00 00 08 00 00 00 00   |...o............|
0x200ee8:   fe ff ff 6f 00 00 00 00  78 05 00 00 00 00 00 00   |...o....x.......|
0x200ef8:   ff ff ff 6f 00 00 00 00  01 00 00 00 00 00 00 00   |...o............|
0x200f08:   f0 ff ff 6f 00 00 00 00  4e 05 00 00 00 00 00 00   |...o....N.......|
0x200f18:   f9 ff ff 6f 00 00 00 00  03 00 00 00 00 00 00 00   |...o............|
0x200f28:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x200f38:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x200f48:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x200f58:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x200f68:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x200f78:   88                                                 |.               |
; section: .got
0x200f78:   88 0d 20 00 00 00 00 00  00 00 00 00 00 00 00 00   |.. .............|
0x200f88:   00 00 00 00 00 00 00 00  b6 07 00 00 00 00 00 00   |................|
0x200f98:   c6 07 00 00 00 00 00 00  d6 07 00 00 00 00 00 00   |................|
0x200fa8:   e6 07 00 00 00 00 00 00  f6 07 00 00 00 00 00 00   |................|
0x200fb8:   06 08 00 00 00 00 00 00  16 08 00 00 00 00 00 00   |................|
0x200fc8:   26 08 00 00 00 00 00 00  36 08 00 00 00 00 00 00   |&.......6.......|
0x200fd8:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x200fe8:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x200ff8:   00 00 00 00 00 00 00 00  00                        |.........       |
; section: .data
0x201000:   00 00 00 00 00 00 00 00  08 10 20 00 00 00 00 00   |.......... .....|
0x201010:   ??                                                 |?               |
