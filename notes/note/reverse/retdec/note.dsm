;;
;; This file was generated by the Retargetable Decompiler
;; Website: https://retdec.com
;; Copyright (c) 2020 Retargetable Decompiler <info@retdec.com>
;;
;; Decompilation date: 2020-10-06 10:50:46
;; Architecture: x86-64
;;

;;
;; Code Segment
;;

; section: .init
; function: _init at 0x400580 -- 0x40059a
0x400580:   48 83 ec 08                  	sub rsp, 8
0x400584:   48 8b 05 6d 0a 20 00         	mov rax, qword ptr [rip + 0x200a6d]
0x40058b:   48 85 c0                     	test rax, rax
0x40058e:   74 05                        	je 0x400595 <_init+0x15>
0x400590:   e8 9b 00 00 00               	call 0x400630 <__gmon_start__>
0x400595:   48 83 c4 08                  	add rsp, 8
0x400599:   c3                           	ret 
; section: .plt
; data inside code section at 0x4005a0 -- 0x4005b0
0x4005a0:   ff 35 62 0a 20 00 ff 25  64 0a 20 00 0f 1f 40 00   |.5b. ..%d. ...@.|
; function: function_4005b0 at 0x4005b0 -- 0x4005b6
0x4005b0:   ff 25 62 0a 20 00            	jmp qword ptr [rip + 0x200a62] <free>
; data inside code section at 0x4005b6 -- 0x4005c0
0x4005b6:   68 00 00 00 00 e9 e0 ff  ff ff                     |h.........      |
; function: function_4005c0 at 0x4005c0 -- 0x4005c6
0x4005c0:   ff 25 5a 0a 20 00            	jmp qword ptr [rip + 0x200a5a] <puts>
; data inside code section at 0x4005c6 -- 0x4005d0
0x4005c6:   68 01 00 00 00 e9 d0 ff  ff ff                     |h.........      |
; function: function_4005d0 at 0x4005d0 -- 0x4005d6
0x4005d0:   ff 25 52 0a 20 00            	jmp qword ptr [rip + 0x200a52] <__stack_chk_fail>
; data inside code section at 0x4005d6 -- 0x4005e0
0x4005d6:   68 02 00 00 00 e9 c0 ff  ff ff                     |h.........      |
; function: function_4005e0 at 0x4005e0 -- 0x4005e6
0x4005e0:   ff 25 4a 0a 20 00            	jmp qword ptr [rip + 0x200a4a] <setbuf>
; data inside code section at 0x4005e6 -- 0x4005f0
0x4005e6:   68 03 00 00 00 e9 b0 ff  ff ff                     |h.........      |
; function: function_4005f0 at 0x4005f0 -- 0x4005f6
0x4005f0:   ff 25 42 0a 20 00            	jmp qword ptr [rip + 0x200a42] <read>
; data inside code section at 0x4005f6 -- 0x400600
0x4005f6:   68 04 00 00 00 e9 a0 ff  ff ff                     |h.........      |
; function: function_400600 at 0x400600 -- 0x400606
0x400600:   ff 25 3a 0a 20 00            	jmp qword ptr [rip + 0x200a3a] <__libc_start_main>
; data inside code section at 0x400606 -- 0x400610
0x400606:   68 05 00 00 00 e9 90 ff  ff ff                     |h.........      |
; function: function_400610 at 0x400610 -- 0x400616
0x400610:   ff 25 32 0a 20 00            	jmp qword ptr [rip + 0x200a32] <malloc>
; data inside code section at 0x400616 -- 0x400620
0x400616:   68 06 00 00 00 e9 80 ff  ff ff                     |h.........      |
; function: function_400620 at 0x400620 -- 0x400626
0x400620:   ff 25 2a 0a 20 00            	jmp qword ptr [rip + 0x200a2a] <atoi>
; data inside code section at 0x400626 -- 0x400630
0x400626:   68 07 00 00 00 e9 70 ff  ff ff                     |h.....p...      |
; section: .plt.got
; function: function_400630 at 0x400630 -- 0x400636
0x400630:   ff 25 c2 09 20 00            	jmp qword ptr [rip + 0x2009c2] <__gmon_start__>
; data inside code section at 0x400636 -- 0x400638
0x400636:   66 90                                              |f.              |
; section: .text
; function: _start at 0x400640 -- 0x40066a
0x400640:   31 ed                        	xor ebp, ebp
0x400642:   49 89 d1                     	mov r9, rdx
0x400645:   5e                           	pop rsi
0x400646:   48 89 e2                     	mov rdx, rsp
0x400649:   48 83 e4 f0                  	and rsp, 0xfffffffffffffff0
0x40064d:   50                           	push rax
0x40064e:   54                           	push rsp
0x40064f:   49 c7 c0 00 0a 40 00         	mov r8, 0x400a00
0x400656:   48 c7 c1 90 09 40 00         	mov rcx, 0x400990
0x40065d:   48 c7 c7 bc 08 40 00         	mov rdi, 0x4008bc
0x400664:   e8 97 ff ff ff               	call 0x400600 <__libc_start_main>
0x400669:   f4                           	hlt 
; data inside code section at 0x40066a -- 0x400670
0x40066a:   66 0f 1f 44 00 00                                  |f..D..          |
; function: deregister_tm_clones at 0x400670 -- 0x4006a2
0x400670:   b8 6f 10 60 00               	mov eax, 0x60106f
0x400675:   55                           	push rbp
0x400676:   48 2d 68 10 60 00            	sub rax, 0x601068
0x40067c:   48 83 f8 0e                  	cmp rax, 0xe
0x400680:   48 89 e5                     	mov rbp, rsp
0x400683:   76 1b                        	jbe 0x4006a0 <deregister_tm_clones+0x30>
0x400685:   b8 00 00 00 00               	mov eax, 0
0x40068a:   48 85 c0                     	test rax, rax
0x40068d:   74 11                        	je 0x4006a0 <deregister_tm_clones+0x30>
0x40068f:   5d                           	pop rbp
0x400690:   bf 68 10 60 00               	mov edi, 0x601068
0x400695:   ff e0                        	jmp rax
; data inside code section at 0x400697 -- 0x4006a0
0x400697:   66 0f 1f 84 00 00 00 00  00                        |f........       |
0x4006a0:   5d                           	pop rbp
0x4006a1:   c3                           	ret 
; data inside code section at 0x4006a2 -- 0x4006b0
0x4006a2:   0f 1f 40 00 66 2e 0f 1f  84 00 00 00 00 00         |..@.f.........  |
; function: register_tm_clones at 0x4006b0 -- 0x4006ea
0x4006b0:   be 68 10 60 00               	mov esi, 0x601068
0x4006b5:   55                           	push rbp
0x4006b6:   48 81 ee 68 10 60 00         	sub rsi, 0x601068
0x4006bd:   48 c1 fe 03                  	sar rsi, 3
0x4006c1:   48 89 e5                     	mov rbp, rsp
0x4006c4:   48 89 f0                     	mov rax, rsi
0x4006c7:   48 c1 e8 3f                  	shr rax, 0x3f
0x4006cb:   48 01 c6                     	add rsi, rax
0x4006ce:   48 d1 fe                     	sar rsi, 1
0x4006d1:   74 15                        	je 0x4006e8 <register_tm_clones+0x38>
0x4006d3:   b8 00 00 00 00               	mov eax, 0
0x4006d8:   48 85 c0                     	test rax, rax
0x4006db:   74 0b                        	je 0x4006e8 <register_tm_clones+0x38>
0x4006dd:   5d                           	pop rbp
0x4006de:   bf 68 10 60 00               	mov edi, 0x601068
0x4006e3:   ff e0                        	jmp rax
; data inside code section at 0x4006e5 -- 0x4006e8
0x4006e5:   0f 1f 00                                           |...             |
0x4006e8:   5d                           	pop rbp
0x4006e9:   c3                           	ret 
; data inside code section at 0x4006ea -- 0x4006f0
0x4006ea:   66 0f 1f 44 00 00                                  |f..D..          |
; function: __do_global_dtors_aux at 0x4006f0 -- 0x40070c
0x4006f0:   80 3d 91 09 20 00 00         	cmp byte ptr [rip + 0x200991], 0
0x4006f7:   75 11                        	jne 0x40070a <__do_global_dtors_aux+0x1a>
0x4006f9:   55                           	push rbp
0x4006fa:   48 89 e5                     	mov rbp, rsp
0x4006fd:   e8 6e ff ff ff               	call 0x400670 <deregister_tm_clones>
0x400702:   5d                           	pop rbp
0x400703:   c6 05 7e 09 20 00 01         	mov byte ptr [rip + 0x20097e], 1
0x40070a:   f3 c3                        	ret 
; data inside code section at 0x40070c -- 0x400710
0x40070c:   0f 1f 40 00                                        |..@.            |
; function: frame_dummy at 0x400710 -- 0x400736
0x400710:   bf 20 0e 60 00               	mov edi, 0x600e20
0x400715:   48 83 3f 00                  	cmp qword ptr [rdi], 0
0x400719:   75 05                        	jne 0x400720 <frame_dummy+0x10>
0x40071b:   eb 93                        	jmp 0x4006b0 <register_tm_clones>
; data inside code section at 0x40071d -- 0x400720
0x40071d:   0f 1f 00                                           |...             |
0x400720:   b8 00 00 00 00               	mov eax, 0
0x400725:   48 85 c0                     	test rax, rax
0x400728:   74 f1                        	je 0x40071b <frame_dummy+0xb>
0x40072a:   55                           	push rbp
0x40072b:   48 89 e5                     	mov rbp, rsp
0x40072e:   ff d0                        	call rax
0x400730:   5d                           	pop rbp
0x400731:   e9 7a ff ff ff               	jmp 0x4006b0 <register_tm_clones>
; function: read_int at 0x400736 -- 0x400795
0x400736:   55                           	push rbp
0x400737:   48 89 e5                     	mov rbp, rsp
0x40073a:   48 83 ec 20                  	sub rsp, 0x20
0x40073e:   64 48 8b 04 25 28 00 00 00   	mov rax, qword ptr fs:[0x28]
0x400747:   48 89 45 f8                  	mov qword ptr [rbp - 8], rax
0x40074b:   31 c0                        	xor eax, eax
0x40074d:   48 c7 45 e0 00 00 00 00      	mov qword ptr [rbp - 0x20], 0
0x400755:   48 c7 45 e8 00 00 00 00      	mov qword ptr [rbp - 0x18], 0
0x40075d:   48 8d 45 e0                  	lea rax, [rbp - 0x20]
0x400761:   ba 10 00 00 00               	mov edx, 0x10
0x400766:   48 89 c6                     	mov rsi, rax
0x400769:   bf 00 00 00 00               	mov edi, 0
0x40076e:   e8 7d fe ff ff               	call 0x4005f0 <read>
0x400773:   48 8d 45 e0                  	lea rax, [rbp - 0x20]
0x400777:   48 89 c7                     	mov rdi, rax
0x40077a:   e8 a1 fe ff ff               	call 0x400620 <atoi>
0x40077f:   48 8b 4d f8                  	mov rcx, qword ptr [rbp - 8]
0x400783:   64 48 33 0c 25 28 00 00 00   	xor rcx, qword ptr fs:[0x28]
0x40078c:   74 05                        	je 0x400793 <read_int+0x5d>
0x40078e:   e8 3d fe ff ff               	call 0x4005d0 <__stack_chk_fail>
0x400793:   c9                           	leave 
0x400794:   c3                           	ret 
; function: add at 0x400795 -- 0x4007eb
0x400795:   55                           	push rbp
0x400796:   48 89 e5                     	mov rbp, rsp
0x400799:   48 83 ec 10                  	sub rsp, 0x10
0x40079d:   bf 18 0a 40 00               	mov edi, 0x400a18 ; "Index:"
0x4007a2:   e8 19 fe ff ff               	call 0x4005c0 <puts>
0x4007a7:   b8 00 00 00 00               	mov eax, 0
0x4007ac:   e8 85 ff ff ff               	call 0x400736 <read_int>
0x4007b1:   89 45 f8                     	mov dword ptr [rbp - 8], eax
0x4007b4:   bf 1f 0a 40 00               	mov edi, 0x400a1f ; "Size:"
0x4007b9:   e8 02 fe ff ff               	call 0x4005c0 <puts>
0x4007be:   b8 00 00 00 00               	mov eax, 0
0x4007c3:   e8 6e ff ff ff               	call 0x400736 <read_int>
0x4007c8:   89 45 fc                     	mov dword ptr [rbp - 4], eax
0x4007cb:   8b 45 fc                     	mov eax, dword ptr [rbp - 4]
0x4007ce:   48 98                        	cdqe 
0x4007d0:   48 89 c7                     	mov rdi, rax
0x4007d3:   e8 38 fe ff ff               	call 0x400610 <malloc>
0x4007d8:   48 89 c2                     	mov rdx, rax
0x4007db:   8b 45 f8                     	mov eax, dword ptr [rbp - 8]
0x4007de:   48 98                        	cdqe 
0x4007e0:   48 89 14 c5 a0 10 60 00      	mov qword ptr [rax*8 + 0x6010a0], rdx
0x4007e8:   90                           	nop 
0x4007e9:   c9                           	leave 
0x4007ea:   c3                           	ret 
; function: delete at 0x4007eb -- 0x400822
0x4007eb:   55                           	push rbp
0x4007ec:   48 89 e5                     	mov rbp, rsp
0x4007ef:   48 83 ec 10                  	sub rsp, 0x10
0x4007f3:   bf 18 0a 40 00               	mov edi, 0x400a18 ; "Index:"
0x4007f8:   e8 c3 fd ff ff               	call 0x4005c0 <puts>
0x4007fd:   b8 00 00 00 00               	mov eax, 0
0x400802:   e8 2f ff ff ff               	call 0x400736 <read_int>
0x400807:   89 45 fc                     	mov dword ptr [rbp - 4], eax
0x40080a:   8b 45 fc                     	mov eax, dword ptr [rbp - 4]
0x40080d:   48 98                        	cdqe 
0x40080f:   48 8b 04 c5 a0 10 60 00      	mov rax, qword ptr [rax*8 + 0x6010a0]
0x400817:   48 89 c7                     	mov rdi, rax
0x40081a:   e8 91 fd ff ff               	call 0x4005b0 <free>
0x40081f:   90                           	nop 
0x400820:   c9                           	leave 
0x400821:   c3                           	ret 
; function: edit at 0x400822 -- 0x400885
0x400822:   55                           	push rbp
0x400823:   48 89 e5                     	mov rbp, rsp
0x400826:   48 83 ec 10                  	sub rsp, 0x10
0x40082a:   bf 18 0a 40 00               	mov edi, 0x400a18 ; "Index:"
0x40082f:   e8 8c fd ff ff               	call 0x4005c0 <puts>
0x400834:   b8 00 00 00 00               	mov eax, 0
0x400839:   e8 f8 fe ff ff               	call 0x400736 <read_int>
0x40083e:   89 45 f8                     	mov dword ptr [rbp - 8], eax
0x400841:   bf 25 0a 40 00               	mov edi, 0x400a25 ; "Len:"
0x400846:   e8 75 fd ff ff               	call 0x4005c0 <puts>
0x40084b:   b8 00 00 00 00               	mov eax, 0
0x400850:   e8 e1 fe ff ff               	call 0x400736 <read_int>
0x400855:   89 45 fc                     	mov dword ptr [rbp - 4], eax
0x400858:   bf 2a 0a 40 00               	mov edi, 0x400a2a ; "Input:"
0x40085d:   e8 5e fd ff ff               	call 0x4005c0 <puts>
0x400862:   8b 45 fc                     	mov eax, dword ptr [rbp - 4]
0x400865:   48 63 d0                     	movsxd rdx, eax
0x400868:   8b 45 f8                     	mov eax, dword ptr [rbp - 8]
0x40086b:   48 98                        	cdqe 
0x40086d:   48 8b 04 c5 a0 10 60 00      	mov rax, qword ptr [rax*8 + 0x6010a0]
0x400875:   48 89 c6                     	mov rsi, rax
0x400878:   bf 00 00 00 00               	mov edi, 0
0x40087d:   e8 6e fd ff ff               	call 0x4005f0 <read>
0x400882:   90                           	nop 
0x400883:   c9                           	leave 
0x400884:   c3                           	ret 
; function: show at 0x400885 -- 0x4008bc
0x400885:   55                           	push rbp
0x400886:   48 89 e5                     	mov rbp, rsp
0x400889:   48 83 ec 10                  	sub rsp, 0x10
0x40088d:   bf 18 0a 40 00               	mov edi, 0x400a18 ; "Index:"
0x400892:   e8 29 fd ff ff               	call 0x4005c0 <puts>
0x400897:   b8 00 00 00 00               	mov eax, 0
0x40089c:   e8 95 fe ff ff               	call 0x400736 <read_int>
0x4008a1:   89 45 fc                     	mov dword ptr [rbp - 4], eax
0x4008a4:   8b 45 fc                     	mov eax, dword ptr [rbp - 4]
0x4008a7:   48 98                        	cdqe 
0x4008a9:   48 8b 04 c5 a0 10 60 00      	mov rax, qword ptr [rax*8 + 0x6010a0]
0x4008b1:   48 89 c7                     	mov rdi, rax
0x4008b4:   e8 07 fd ff ff               	call 0x4005c0 <puts>
0x4008b9:   90                           	nop 
0x4008ba:   c9                           	leave 
0x4008bb:   c3                           	ret 
; function: main at 0x4008bc -- 0x40098b
0x4008bc:   55                           	push rbp
0x4008bd:   48 89 e5                     	mov rbp, rsp
0x4008c0:   48 83 ec 10                  	sub rsp, 0x10
0x4008c4:   48 8b 05 b5 07 20 00         	mov rax, qword ptr [rip + 0x2007b5]
0x4008cb:   be 00 00 00 00               	mov esi, 0
0x4008d0:   48 89 c7                     	mov rdi, rax
0x4008d3:   e8 08 fd ff ff               	call 0x4005e0 <setbuf>
0x4008d8:   bf 38 0a 40 00               	mov edi, 0x400a38 ; "Start our heap journey from old-school style!"
0x4008dd:   e8 de fc ff ff               	call 0x4005c0 <puts>
0x4008e2:   bf 68 0a 40 00               	mov edi, 0x400a68 ; "How many ways can you exploit this?"
0x4008e7:   e8 d4 fc ff ff               	call 0x4005c0 <puts>
0x4008ec:   bf 8c 0a 40 00               	mov edi, 0x400a8c ; "1. Add"
0x4008f1:   e8 ca fc ff ff               	call 0x4005c0 <puts>
0x4008f6:   bf 93 0a 40 00               	mov edi, 0x400a93 ; "2. Delete"
0x4008fb:   e8 c0 fc ff ff               	call 0x4005c0 <puts>
0x400900:   bf 9d 0a 40 00               	mov edi, 0x400a9d ; "3. Edit"
0x400905:   e8 b6 fc ff ff               	call 0x4005c0 <puts>
0x40090a:   bf a5 0a 40 00               	mov edi, 0x400aa5 ; "4. Show"
0x40090f:   e8 ac fc ff ff               	call 0x4005c0 <puts>
0x400914:   bf ad 0a 40 00               	mov edi, 0x400aad ; "Choice:"
0x400919:   e8 a2 fc ff ff               	call 0x4005c0 <puts>
0x40091e:   b8 00 00 00 00               	mov eax, 0
0x400923:   e8 0e fe ff ff               	call 0x400736 <read_int>
0x400928:   89 45 fc                     	mov dword ptr [rbp - 4], eax
0x40092b:   8b 45 fc                     	mov eax, dword ptr [rbp - 4]
0x40092e:   83 f8 02                     	cmp eax, 2
0x400931:   74 24                        	je 0x400957 <main+0x9b>
0x400933:   83 f8 02                     	cmp eax, 2
0x400936:   7f 07                        	jg 0x40093f <main+0x83>
0x400938:   83 f8 01                     	cmp eax, 1
0x40093b:   74 0e                        	je 0x40094b <main+0x8f>
0x40093d:   eb 3c                        	jmp 0x40097b <main+0xbf>
0x40093f:   83 f8 03                     	cmp eax, 3
0x400942:   74 1f                        	je 0x400963 <main+0xa7>
0x400944:   83 f8 04                     	cmp eax, 4
0x400947:   74 26                        	je 0x40096f <main+0xb3>
0x400949:   eb 30                        	jmp 0x40097b <main+0xbf>
0x40094b:   b8 00 00 00 00               	mov eax, 0
0x400950:   e8 40 fe ff ff               	call 0x400795 <add>
0x400955:   eb 2f                        	jmp 0x400986 <main+0xca>
0x400957:   b8 00 00 00 00               	mov eax, 0
0x40095c:   e8 8a fe ff ff               	call 0x4007eb <delete>
0x400961:   eb 23                        	jmp 0x400986 <main+0xca>
0x400963:   b8 00 00 00 00               	mov eax, 0
0x400968:   e8 b5 fe ff ff               	call 0x400822 <edit>
0x40096d:   eb 17                        	jmp 0x400986 <main+0xca>
0x40096f:   b8 00 00 00 00               	mov eax, 0
0x400974:   e8 0c ff ff ff               	call 0x400885 <show>
0x400979:   eb 0b                        	jmp 0x400986 <main+0xca>
0x40097b:   bf b5 0a 40 00               	mov edi, 0x400ab5 ; "Invalid"
0x400980:   e8 3b fc ff ff               	call 0x4005c0 <puts>
0x400985:   90                           	nop 
0x400986:   e9 61 ff ff ff               	jmp 0x4008ec <main+0x30>
; data inside code section at 0x40098b -- 0x400990
0x40098b:   0f 1f 44 00 00                                     |..D..           |
; function: __libc_csu_init at 0x400990 -- 0x4009f5
0x400990:   41 57                        	push r15
0x400992:   41 56                        	push r14
0x400994:   41 89 ff                     	mov r15d, edi
0x400997:   41 55                        	push r13
0x400999:   41 54                        	push r12
0x40099b:   4c 8d 25 6e 04 20 00         	lea r12, [rip + 0x20046e]
0x4009a2:   55                           	push rbp
0x4009a3:   48 8d 2d 6e 04 20 00         	lea rbp, [rip + 0x20046e]
0x4009aa:   53                           	push rbx
0x4009ab:   49 89 f6                     	mov r14, rsi
0x4009ae:   49 89 d5                     	mov r13, rdx
0x4009b1:   4c 29 e5                     	sub rbp, r12
0x4009b4:   48 83 ec 08                  	sub rsp, 8
0x4009b8:   48 c1 fd 03                  	sar rbp, 3
0x4009bc:   e8 bf fb ff ff               	call 0x400580 <_init>
0x4009c1:   48 85 ed                     	test rbp, rbp
0x4009c4:   74 20                        	je 0x4009e6 <__libc_csu_init+0x56>
0x4009c6:   31 db                        	xor ebx, ebx
0x4009c8:   0f 1f 84 00 00 00 00 00      	nop dword ptr [rax + rax]
0x4009d0:   4c 89 ea                     	mov rdx, r13
0x4009d3:   4c 89 f6                     	mov rsi, r14
0x4009d6:   44 89 ff                     	mov edi, r15d
0x4009d9:   41 ff 14 dc                  	call qword ptr [r12 + rbx*8]
0x4009dd:   48 83 c3 01                  	add rbx, 1
0x4009e1:   48 39 eb                     	cmp rbx, rbp
0x4009e4:   75 ea                        	jne 0x4009d0 <__libc_csu_init+0x40>
0x4009e6:   48 83 c4 08                  	add rsp, 8
0x4009ea:   5b                           	pop rbx
0x4009eb:   5d                           	pop rbp
0x4009ec:   41 5c                        	pop r12
0x4009ee:   41 5d                        	pop r13
0x4009f0:   41 5e                        	pop r14
0x4009f2:   41 5f                        	pop r15
0x4009f4:   c3                           	ret 
; data inside code section at 0x4009f5 -- 0x400a00
0x4009f5:   90 66 2e 0f 1f 84 00 00  00 00 00                  |.f.........     |
; function: __libc_csu_fini at 0x400a00 -- 0x400a02
0x400a00:   f3 c3                        	ret 
; section: .fini
; function: _fini at 0x400a04 -- 0x400a0d
0x400a04:   48 83 ec 08                  	sub rsp, 8
0x400a08:   48 83 c4 08                  	add rsp, 8
0x400a0c:   c3                           	ret 

;;
;; Data Segment
;;

; section: .interp
0x400238:   2f 6c 69 62 36 34 2f 6c  64 2d 6c 69 6e 75 78 2d   |/lib64/ld-linux-|
0x400248:   78 38 36 2d 36 34 2e 73  6f 2e 32 00 04            |x86-64.so.2..   |
; section: .gnu.hash
0x400298:   02 00 00 00 0a 00 00 00  01 00 00 00 06 00 00 00   |................|
0x4002a8:   00 00 00 00 00 01 10 00  0a 00 00 00 00 00 00 00   |................|
0x4002b8:   29 1d 8c 1c ??                                     |)...?           |
; section: .dynsym
0x4002c0:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x4002d0:   00 00 00 00 00 00 00 00  52 00 00 00 12 00 00 00   |........R.......|
0x4002e0:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x4002f0:   0b 00 00 00 12 00 00 00  00 00 00 00 00 00 00 00   |................|
0x400300:   00 00 00 00 00 00 00 00  10 00 00 00 12 00 00 00   |................|
0x400310:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x400320:   39 00 00 00 12 00 00 00  00 00 00 00 00 00 00 00   |9...............|
0x400330:   00 00 00 00 00 00 00 00  21 00 00 00 12 00 00 00   |........!.......|
0x400340:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x400350:   40 00 00 00 12 00 00 00  00 00 00 00 00 00 00 00   |@...............|
0x400360:   00 00 00 00 00 00 00 00  57 00 00 00 20 00 00 00   |........W... ...|
0x400370:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x400380:   2d 00 00 00 12 00 00 00  00 00 00 00 00 00 00 00   |-...............|
0x400390:   00 00 00 00 00 00 00 00  34 00 00 00 12 00 00 00   |........4.......|
0x4003a0:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x4003b0:   26 00 00 00 11 00 1a 00  80 10 60 00 00 00 00 00   |&.........`.....|
0x4003c0:   08 00 00 00 00 00 00 00  00                        |.........       |
; section: .dynstr
0x4003c8:   00 6c 69 62 63 2e 73 6f  2e 36 00 70 75 74 73 00   |.libc.so.6.puts.|
0x4003d8:   5f 5f 73 74 61 63 6b 5f  63 68 6b 5f 66 61 69 6c   |__stack_chk_fail|
0x4003e8:   00 72 65 61 64 00 73 74  64 6f 75 74 00 6d 61 6c   |.read.stdout.mal|
0x4003f8:   6c 6f 63 00 61 74 6f 69  00 73 65 74 62 75 66 00   |loc.atoi.setbuf.|
0x400408:   5f 5f 6c 69 62 63 5f 73  74 61 72 74 5f 6d 61 69   |__libc_start_mai|
0x400418:   6e 00 66 72 65 65 00 5f  5f 67 6d 6f 6e 5f 73 74   |n.free.__gmon_st|
0x400428:   61 72 74 5f 5f 00 47 4c  49 42 43 5f 32 2e 34 00   |art__.GLIBC_2.4.|
0x400438:   47 4c 49 42 43 5f 32 2e  32 2e 35 00 00            |GLIBC_2.2.5..   |
; section: .gnu.version
0x400444:   00 00 02 00 02 00 03 00  02 00 02 00 02 00 00 00   |................|
0x400454:   02 00 02 00 02 00 ??                               |......?         |
; section: .gnu.version_r
0x400460:   01 00 02 00 01 00 00 00  10 00 00 00 00 00 00 00   |................|
0x400470:   14 69 69 0d 00 00 03 00  66 00 00 00 10 00 00 00   |.ii.....f.......|
0x400480:   75 1a 69 09 00 00 02 00  70 00 00 00 00 00 00 00   |u.i.....p.......|
0x400490:   f8                                                 |.               |
; section: .rela.dyn
0x400490:   f8 0f 60 00 00 00 00 00  06 00 00 00 07 00 00 00   |..`.............|
0x4004a0:   00 00 00 00 00 00 00 00  80 10 60 00 00 00 00 00   |..........`.....|
0x4004b0:   05 00 00 00 0a 00 00 00  00 00 00 00 00 00 00 00   |................|
0x4004c0:   18                                                 |.               |
; section: .rela.plt
0x4004c0:   18 10 60 00 00 00 00 00  07 00 00 00 01 00 00 00   |..`.............|
0x4004d0:   00 00 00 00 00 00 00 00  20 10 60 00 00 00 00 00   |........ .`.....|
0x4004e0:   07 00 00 00 02 00 00 00  00 00 00 00 00 00 00 00   |................|
0x4004f0:   28 10 60 00 00 00 00 00  07 00 00 00 03 00 00 00   |(.`.............|
0x400500:   00 00 00 00 00 00 00 00  30 10 60 00 00 00 00 00   |........0.`.....|
0x400510:   07 00 00 00 04 00 00 00  00 00 00 00 00 00 00 00   |................|
0x400520:   38 10 60 00 00 00 00 00  07 00 00 00 05 00 00 00   |8.`.............|
0x400530:   00 00 00 00 00 00 00 00  40 10 60 00 00 00 00 00   |........@.`.....|
0x400540:   07 00 00 00 06 00 00 00  00 00 00 00 00 00 00 00   |................|
0x400550:   48 10 60 00 00 00 00 00  07 00 00 00 08 00 00 00   |H.`.............|
0x400560:   00 00 00 00 00 00 00 00  50 10 60 00 00 00 00 00   |........P.`.....|
0x400570:   07 00 00 00 09 00 00 00  00 00 00 00 00 00 00 00   |................|
0x400580:   48                                                 |H               |
; section: .rodata
0x400a10:   01 00 02 00 00 00 00 00                            |........        |
0x400a18:   49 6e 64 65 78 3a 00                               |Index:.         |   "Index:"
0x400a1f:   53 69 7a 65 3a 00                                  |Size:.          |   "Size:"
0x400a25:   4c 65 6e 3a 00                                     |Len:.           |   "Len:"
0x400a2a:   49 6e 70 75 74 3a 00                               |Input:.         |   "Input:"
0x400a31:   00 00 00 00 00 00 00                               |.......         |
0x400a38:   53 74 61 72 74 20 6f 75  72 20 68 65 61 70 20 6a   |Start our heap j|   "Start our heap journey from old-school style!"
0x400a48:   6f 75 72 6e 65 79 20 66  72 6f 6d 20 6f 6c 64 2d   |ourney from old-|
0x400a58:   73 63 68 6f 6f 6c 20 73  74 79 6c 65 21 00         |school style!.  |
0x400a66:   00 00                                              |..              |
0x400a68:   48 6f 77 20 6d 61 6e 79  20 77 61 79 73 20 63 61   |How many ways ca|   "How many ways can you exploit this?"
0x400a78:   6e 20 79 6f 75 20 65 78  70 6c 6f 69 74 20 74 68   |n you exploit th|
0x400a88:   69 73 3f 00                                        |is?.            |
0x400a8c:   31 2e 20 41 64 64 00                               |1. Add.         |   "1. Add"
0x400a93:   32 2e 20 44 65 6c 65 74  65 00                     |2. Delete.      |   "2. Delete"
0x400a9d:   33 2e 20 45 64 69 74 00                            |3. Edit.        |   "3. Edit"
0x400aa5:   34 2e 20 53 68 6f 77 00                            |4. Show.        |   "4. Show"
0x400aad:   43 68 6f 69 63 65 3a 00                            |Choice:.        |   "Choice:"
0x400ab5:   49 6e 76 61 6c 69 64 00                            |Invalid.        |   "Invalid"
0x400abd:   ??                                                 |?               |
; section: .eh_frame_hdr
0x400ac0:   01 1b 03 3b 5c 00 00 00  0a 00 00 00 e0 fa ff ff   |...;\...........|
0x400ad0:   a8 00 00 00 80 fb ff ff  78 00 00 00 76 fc ff ff   |........x...v...|
0x400ae0:   d0 00 00 00 d5 fc ff ff  f0 00 00 00 2b fd ff ff   |............+...|
0x400af0:   10 01 00 00 62 fd ff ff  30 01 00 00 c5 fd ff ff   |....b...0.......|
0x400b00:   50 01 00 00 fc fd ff ff  70 01 00 00 d0 fe ff ff   |P.......p.......|
0x400b10:   90 01 00 00 40 ff ff ff  d8 01 00 00 ??            |....@.......?   |
; section: .eh_frame
0x400b20:   14 00 00 00 00 00 00 00  01 7a 52 00 01 78 10 01   |.........zR..x..|
0x400b30:   1b 0c 07 08 90 01 07 10  14 00 00 00 1c 00 00 00   |................|
0x400b40:   00 fb ff ff 2a 00 00 00  00 00 00 00 00 00 00 00   |....*...........|
0x400b50:   14 00 00 00 00 00 00 00  01 7a 52 00 01 78 10 01   |.........zR..x..|
0x400b60:   1b 0c 07 08 90 01 00 00  24 00 00 00 1c 00 00 00   |........$.......|
0x400b70:   30 fa ff ff 90 00 00 00  00 0e 10 46 0e 18 4a 0f   |0..........F..J.|
0x400b80:   0b 77 08 80 00 3f 1a 3b  2a 33 24 22 00 00 00 00   |.w...?.;*3$"....|
0x400b90:   1c 00 00 00 44 00 00 00  9e fb ff ff 5f 00 00 00   |....D......._...|
0x400ba0:   00 41 0e 10 86 02 43 0d  06 02 5a 0c 07 08 00 00   |.A....C...Z.....|
0x400bb0:   1c 00 00 00 64 00 00 00  dd fb ff ff 56 00 00 00   |....d.......V...|
0x400bc0:   00 41 0e 10 86 02 43 0d  06 02 51 0c 07 08 00 00   |.A....C...Q.....|
0x400bd0:   1c 00 00 00 84 00 00 00  13 fc ff ff 37 00 00 00   |............7...|
0x400be0:   00 41 0e 10 86 02 43 0d  06 72 0c 07 08 00 00 00   |.A....C..r......|
0x400bf0:   1c 00 00 00 a4 00 00 00  2a fc ff ff 63 00 00 00   |........*...c...|
0x400c00:   00 41 0e 10 86 02 43 0d  06 02 5e 0c 07 08 00 00   |.A....C...^.....|
0x400c10:   1c 00 00 00 c4 00 00 00  6d fc ff ff 37 00 00 00   |........m...7...|
0x400c20:   00 41 0e 10 86 02 43 0d  06 72 0c 07 08 00 00 00   |.A....C..r......|
0x400c30:   1c 00 00 00 e4 00 00 00  84 fc ff ff cf 00 00 00   |................|
0x400c40:   00 41 0e 10 86 02 43 0d  06 00 00 00 00 00 00 00   |.A....C.........|
0x400c50:   44 00 00 00 04 01 00 00  38 fd ff ff 65 00 00 00   |D.......8...e...|
0x400c60:   00 42 0e 10 8f 02 42 0e  18 8e 03 45 0e 20 8d 04   |.B....B....E. ..|
0x400c70:   42 0e 28 8c 05 48 0e 30  86 06 48 0e 38 83 07 4d   |B.(..H.0..H.8..M|
0x400c80:   0e 40 72 0e 38 41 0e 30  41 0e 28 42 0e 20 42 0e   |.@r.8A.0A.(B. B.|
0x400c90:   18 42 0e 10 42 0e 08 00  14 00 00 00 4c 01 00 00   |.B..B.......L...|
0x400ca0:   60 fd ff ff 02 00 00 00  00 00 00 00 00 00 00 00   |`...............|
0x400cb0:   00 00 00 00 ??                                     |....?           |
; section: .init_array
0x600e10:   10 07 40 00 00 00 00 00  f0                        |..@......       |
; section: .fini_array
0x600e18:   f0 06 40 00 00 00 00 00  00                        |..@......       |
; section: .jcr
0x600e20:   00 00 00 00 00 00 00 00  01                        |.........       |
; section: .dynamic
0x600e28:   01 00 00 00 00 00 00 00  01 00 00 00 00 00 00 00   |................|
0x600e38:   0c 00 00 00 00 00 00 00  80 05 40 00 00 00 00 00   |..........@.....|
0x600e48:   0d 00 00 00 00 00 00 00  04 0a 40 00 00 00 00 00   |..........@.....|
0x600e58:   19 00 00 00 00 00 00 00  10 0e 60 00 00 00 00 00   |..........`.....|
0x600e68:   1b 00 00 00 00 00 00 00  08 00 00 00 00 00 00 00   |................|
0x600e78:   1a 00 00 00 00 00 00 00  18 0e 60 00 00 00 00 00   |..........`.....|
0x600e88:   1c 00 00 00 00 00 00 00  08 00 00 00 00 00 00 00   |................|
0x600e98:   f5 fe ff 6f 00 00 00 00  98 02 40 00 00 00 00 00   |...o......@.....|
0x600ea8:   05 00 00 00 00 00 00 00  c8 03 40 00 00 00 00 00   |..........@.....|
0x600eb8:   06 00 00 00 00 00 00 00  c0 02 40 00 00 00 00 00   |..........@.....|
0x600ec8:   0a 00 00 00 00 00 00 00  7c 00 00 00 00 00 00 00   |........|.......|
0x600ed8:   0b 00 00 00 00 00 00 00  18 00 00 00 00 00 00 00   |................|
0x600ee8:   15 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x600ef8:   03 00 00 00 00 00 00 00  00 10 60 00 00 00 00 00   |..........`.....|
0x600f08:   02 00 00 00 00 00 00 00  c0 00 00 00 00 00 00 00   |................|
0x600f18:   14 00 00 00 00 00 00 00  07 00 00 00 00 00 00 00   |................|
0x600f28:   17 00 00 00 00 00 00 00  c0 04 40 00 00 00 00 00   |..........@.....|
0x600f38:   07 00 00 00 00 00 00 00  90 04 40 00 00 00 00 00   |..........@.....|
0x600f48:   08 00 00 00 00 00 00 00  30 00 00 00 00 00 00 00   |........0.......|
0x600f58:   09 00 00 00 00 00 00 00  18 00 00 00 00 00 00 00   |................|
0x600f68:   fe ff ff 6f 00 00 00 00  60 04 40 00 00 00 00 00   |...o....`.@.....|
0x600f78:   ff ff ff 6f 00 00 00 00  01 00 00 00 00 00 00 00   |...o............|
0x600f88:   f0 ff ff 6f 00 00 00 00  44 04 40 00 00 00 00 00   |...o....D.@.....|
0x600f98:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x600fa8:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x600fb8:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x600fc8:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x600fd8:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x600fe8:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x600ff8:   00                                                 |.               |
; section: .got
0x600ff8:   00 00 00 00 00 00 00 00  28                        |........(       |
; section: .got.plt
0x601000:   28 0e 60 00 00 00 00 00  00 00 00 00 00 00 00 00   |(.`.............|
0x601010:   00 00 00 00 00 00 00 00  b6 05 40 00 00 00 00 00   |..........@.....|
0x601020:   c6 05 40 00 00 00 00 00  d6 05 40 00 00 00 00 00   |..@.......@.....|
0x601030:   e6 05 40 00 00 00 00 00  f6 05 40 00 00 00 00 00   |..@.......@.....|
0x601040:   06 06 40 00 00 00 00 00  16 06 40 00 00 00 00 00   |..@.......@.....|
0x601050:   26 06 40 00 00 00 00 00  00                        |&.@......       |
; section: .data
0x601058:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x601068:   ??                                                 |?               |
